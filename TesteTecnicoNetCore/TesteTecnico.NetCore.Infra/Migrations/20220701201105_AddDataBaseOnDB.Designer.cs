// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteTecnico.NetCore.Infra.ORM;

namespace TesteTecnico.NetCore.Data.Migrations
{
    [DbContext(typeof(IDbContext))]
    [Migration("20220701201105_AddDataBaseOnDB")]
    partial class AddDataBaseOnDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteTecnico.NetCore.Domain.Entities.Escolaridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(90)");

                    b.HasKey("Id");

                    b.ToTable("Escolaridade");
                });

            modelBuilder.Entity("TesteTecnico.NetCore.Domain.Entities.HistoricoEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Formato")
                        .HasColumnType("varchar(90)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(90)");

                    b.HasKey("Id");

                    b.ToTable("HistoricoEscolar");
                });

            modelBuilder.Entity("TesteTecnico.NetCore.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DataNascimento");

                    b.Property<int>("EcolaridadeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Email");

                    b.Property<int>("HistoricoEScolarId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Nome");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasColumnName("SobreNome");

                    b.HasKey("Id");

                    b.HasIndex("EcolaridadeId");

                    b.HasIndex("HistoricoEScolarId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TesteTecnico.NetCore.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("TesteTecnico.NetCore.Domain.Entities.Escolaridade", "Ecolaridade")
                        .WithMany("Usuarios")
                        .HasForeignKey("EcolaridadeId")
                        .IsRequired();

                    b.HasOne("TesteTecnico.NetCore.Domain.Entities.HistoricoEscolar", "HistoricoEscolar")
                        .WithMany("Usuarios")
                        .HasForeignKey("HistoricoEScolarId")
                        .IsRequired();

                    b.Navigation("Ecolaridade");

                    b.Navigation("HistoricoEscolar");
                });

            modelBuilder.Entity("TesteTecnico.NetCore.Domain.Entities.Escolaridade", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("TesteTecnico.NetCore.Domain.Entities.HistoricoEscolar", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
